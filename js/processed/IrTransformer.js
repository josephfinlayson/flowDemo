// Generated by CoffeeScript 1.6.2
(function() {
  var Processed, choiceHandler, handlers, informHandler, inform_to_choice, root, template;

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  if (root.Processed == null) {
    root.Processed = {};
  }

  Processed = root.Processed;

  template = "\n<div class=\"stage\">\n  <h1 class=\"stage-title\"></h1>\n\n  <div class=\"stage-text\">\n  </div>\n  \n  <div class=\"stage-options\">\n  </div>\n  \n  <div class=\"stage-choices\">\n  </div>\n</div>\n\n";

  choiceHandler = function(node, accuData, workflow, callback) {
    var choice, clickCallback, elem, link, _i, _len, _ref;

    elem = $('<div>').html(template);
    if (node.title != null) {
      elem.find(".stage-title").text(node.title);
    }
    if (node.text != null) {
      elem.find(".stage-text").text(node.text);
    }
    _ref = node.choices;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      choice = _ref[_i];
      if ((callback != null) && (choice.target != null)) {
        clickCallback = (function(target) {
          return callback(target);
        })(choice.target);
      } else {
        clickCallback = null;
        console.error("Error processing choice node (%o). Missing target for choice!", node);
      }
      link = $('<a>').addClass("target").text(choice.text).click(clickCallback);
      if (choice["class"] != null) {
        link.addClass(choice["class"]);
      }
      elem.find(".stage-choices").append(link);
    }
    return elem;
  };

  inform_to_choice = function(node) {
    node = $.extend(true, {}, node);
    node.type = "choice";
    node.choices = [
      {
        text: "Continue",
        target: node.target
      }
    ];
    delete node.target;
    return node;
  };

  informHandler = function(node, accuData, workflow, callback) {
    return choiceHandler(inform_to_choice(node), accuData, workflow, callback);
  };

  handlers = {
    "inform": informHandler,
    "choice": choiceHandler
  };

  Processed.NodeToHtml = function(node, accuData, workflow, callback) {
    var elem;

    if (node == null) {
      elem = $('<div>').html(template);
      console.error("Node not defined!");
    } else if ((node.type != null) && node.type in handlers) {
      elem = handlers[node.type](node, accuData, workflow, callback);
    } else if (node.type != null) {
      console.error("Treating unknown node type '%s' as 'inform': %o", node.type, node);
      elem = handlers["inform"](node, accuData, workflow, callback);
    } else {
      elem = $('<div>').html(template);
      console.error("Invalid node object ", node);
    }
    return elem[0];
  };

}).call(this);
